name: movieInformation-CI

#push実行時にワークフローが作動
on: [ pull_request ]

#コンテンツの読み取りとチェックの書き込み権限が指定
permissions:
  contents: read
  checks: write

#ワークフローが実行するジョブ（Job）の定義を開始 jobsの名前は「build」
jobs:
  build:
    runs-on: ubuntu-latest　 #ジョブを実行するOS(ランナー)を指定,今回はGitHubが提供するUbuntuの最新バージョン
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      #Dockerコンテナをバックグラウンドで起動
      - name: Run Docker
        run: docker compose up -d

      #AdoptOpenJDKからJDK 17を取得
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Conduct Tests
        run: ./gradlew test --info

      #テスト結果のレポートを生成し、それを適切な形式で GitHub 上に公開する
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      # Checkstyle を実行してコードのスタイルや品質に関する問題を検出し、それを GitHub 上で表示可能な形式に変換するためのもの
      - name: Run Checkstyle
        uses: nikitasavinov/checkstyle-action@master
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-pr-check'
          tool_name: 'reviewdog'
          checkstyle_config: 'config/checkstyle/checkstyle.xml'
          workdir: 'src/main'
          level: error

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Discord に通知を送信するためのアクション
      - name: Discord Notification
          uses: "sarisia/actions-status-discord@v1"
          if: always()
          with:
            webhook: ${{ secrets.DISCORD_WEBHOOK }}
            status: ${{ job.status }}
            title: "Continuous Integration"　
            description: "Run Continuous Integration"
            color: "#88d297"
            url: "https://github.com/sarisia/actions-status-discord"
            username: GitHub Actions

